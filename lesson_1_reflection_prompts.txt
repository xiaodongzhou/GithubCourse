How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Many bugs were created due to typos.  Many bugs are due to copied code with modifications.  In some cases, the new version does not work, but the old version does.  

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Understand how the current program was developed. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: know when to save the version to avoid saved version is not a complete one. 
    Cons: People may forget to save a working version.  

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Usually, programming includes multiple files with close relations.  However, Google docs are just documents, where corelation among documents is quite rare, but the automatic saving is more important to keep edition safe. 

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    We can roll back if the new version does not work. 

Now that you have your workspace set up, what do you want to try using Git for?

    My Udacity course projects in Python.  
